import * as _nuxt_schema from '@nuxt/schema';
import * as vue_i18n_routing from 'vue-i18n-routing';
import { LocaleObject, BaseUrlResolveHandler, Strategies, I18nRoutingOptions } from 'vue-i18n-routing';
import { Locale, I18nOptions } from '@intlify/vue-i18n-bridge';

declare type NoNullable<T> = Exclude<T, null | undefined>;
declare type RedirectOnOptions = 'all' | 'root' | 'no prefix';
interface LazyOptions {
    skipNuxtState?: boolean;
}
interface DetectBrowserLanguageOptions {
    alwaysRedirect?: boolean;
    cookieCrossOrigin?: boolean;
    cookieDomain?: string | null;
    cookieKey?: string;
    cookieSecure?: boolean;
    fallbackLocale?: Locale | null;
    redirectOn?: RedirectOnOptions;
    useCookie?: boolean;
}
declare type LocaleInfo = {
    path: string;
} & LocaleObject;
interface RootRedirectOptions {
    path: string;
    statusCode: number;
}
declare type CustomRoutePages = {
    [key: string]: false | {
        [key: string]: false | string;
    };
};
declare type BeforeLanguageSwitchHandler = <Context = any>(oldLocale: string, newLocale: string, initialSetup: boolean, context: Context) => string | void;
declare type LanguageSwitchedHandler = (oldLocale: string, newLocale: string) => void;
declare type NuxtI18nOptions<BaseUrl extends BaseUrlResolveHandler = BaseUrlResolveHandler> = {
    differentDomains?: boolean;
    onBeforeLanguageSwitch?: BeforeLanguageSwitchHandler;
    onLanguageSwitched?: LanguageSwitchedHandler;
    detectBrowserLanguage?: DetectBrowserLanguageOptions | false;
    langDir?: string | null;
    lazy?: boolean | LazyOptions;
    pages?: CustomRoutePages;
    routesNameSeparator?: string;
    strategy?: Strategies;
    vueI18n?: I18nOptions | string;
} & Pick<I18nRoutingOptions<BaseUrl>, 'baseUrl' | 'strategy' | 'defaultDirection' | 'defaultLocale' | 'defaultLocaleRouteNameSuffix' | 'locales' | 'routesNameSeparator' | 'trailingSlash'>;
declare type NuxtI18nInternalOptions = {
    __normalizedLocales?: LocaleObject[];
};

declare const _default: _nuxt_schema.NuxtModule<NuxtI18nOptions<vue_i18n_routing.BaseUrlResolveHandler<unknown>>>;

declare module '@nuxt/schema' {
    interface NuxtConfig {
        i18n?: NuxtI18nOptions;
    }
}

export { BeforeLanguageSwitchHandler, CustomRoutePages, DetectBrowserLanguageOptions, LanguageSwitchedHandler, LazyOptions, LocaleInfo, NoNullable, NuxtI18nInternalOptions, NuxtI18nOptions, RedirectOnOptions, RootRedirectOptions, _default as default };
